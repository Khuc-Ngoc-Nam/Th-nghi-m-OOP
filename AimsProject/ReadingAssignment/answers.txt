Try to add a method addDigitalVideoDisc which allows to pass an arbitrary number of arguments for dvd. Compare to an array parameter. What do you prefer in this case?
 - I prefer the arbitrary number of arguments for dvd because it is more flexible and easier to use.
   We don't need to init an array and pass it to the method. We can pass the dvd directly to the method.

Is JAVA a Pass by Value or a Pass by Reference programming language?
 - JAVA is a Pass by Value programming language.
   When we pass a variable to a method, we pass the value of the variable, not the reference of the variable.
   So, the original variable is not changed when we change the variable in the method.

After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?
 - In the swap method, o1 and o2 are copies of the references to jungleDVD and cinderellaDVD.
   Inside the swap method, you are just swapping the references (o1 and o2), but not the actual objects that these references point to.

After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed?
 - In the changeTitle method, you are copying the reference to jungleDVD.
   However, this reference copy still points to the same jungleDVD object in memory.
   When you call dvd.setTitle(title), you are modifying the state of the object that dvd points to, which is the same object as jungleDVD in the main method. Therefore, the title of jungleDVD is changed.

What should be the return type of this method?
 - For the toString() method, String should be the return type since it contains letters, numbers, and symbols.
